[supervisord]
nodaemon=true

# If the container has been restarted, its `master` branch may already have
# one or more commits. Depending on the timing, new commits may be available in
# the upstream repository (despite the `fetch-wpt.py` script which is designed
# to retrieve these). git will consider these commits as belonging to an
# "unrelated history" of the local (shallow) repository. The
# `--allow-unrelated-histories` flag allows this command to proceed in this
# case, and the `--no-edit` flag suppresses an interactive prompt for a commit
# message.
[program:setup]
command=/bin/bash -c '\
  git pull origin master \
    --verbose \
    --allow-unrelated-histories \
    --no-edit \
    --depth 1 \
    --no-tags && \
      envsubst < ../wpt-config.json.template > ../wpt-config.json && \
      supervisorctl start all || \
      kill -SIGQUIT $PPID'
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# If the WPT server process exits of its own accord (i.e. not when triggered
# by a `supervisorctl` action), the Supervisor daemon will be killed and the
# Docker image will stop.

[program:wpt]
directory=/root/wpt
command=/bin/bash -c '\
  ./wpt serve --config ../wpt-config.json; kill -SIGQUIT $PPID'
autostart=false
# Signals should be sent to the entire process group to ensure they reach the
# WPT server process and not only the Bash process which initiated it.
stopasgroup=true
killasgroup=true
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# The following processes have been designed to only exit after they have made
# a change that requires the WPT server to be restarted. If they exit with a
# non-zero exit code, this configuration ensures that the Supervisor daemon is
# killed so that the Docker container stops.

[program:fetch-certs]
command=/bin/bash -c '\
  fetch-certs.py --bucket $WPT_BUCKET --outdir /root --period 3600 && \
    supervisorctl restart wpt || kill -SIGQUIT $PPID'
autorestart=true
autostart=false
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

[program:fetch-wpt]
command=/bin/bash -c '\
  fetch-wpt.py --remote origin --branch master --period 60 && \
    supervisorctl restart wpt || kill -SIGQUIT $PPID'
autorestart=true
autostart=false
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0
