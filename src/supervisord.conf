[supervisord]
nodaemon=true

[program:setup]
command=/bin/bash -c '\
  git pull origin master --depth 1 --no-tags && \
    envsubst < ../wpt-config.json.template > ../wpt-config.json && \
    supervisorctl start all || \
    kill -SIGQUIT $PPID'
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# If the WPT server process exits of its own accord (i.e. not when triggered
# by a `supervisorctl` action), the Supervisor daemon will be killed and the
# Docker image will stop.

[program:wpt]
directory=/root/wpt
command=/bin/bash -c '\
  ./wpt serve --config ../wpt-config.json; kill -SIGQUIT $PPID'
autostart=false
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# The following processes have been designed to only exit after they have made
# a change that requires the WPT server to be restarted. If they exit with a
# non-zero exit code, this configuration ensures that the Supervisor daemon is
# killed so that the Docker container stops.

[program:fetch-certs]
command=/bin/bash -c '\
  fetch-certs.py --bucket $WPT_BUCKET --outdir /root --period 3600 && \
    supervisorctl restart wpt || kill -SIGQUIT $PPID'
autorestart=true
autostart=false
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

[program:fetch-wpt]
command=/bin/bash -c '\
  fetch-wpt.py --remote origin --branch master --period 60 && \
    supervisorctl restart wpt || kill -SIGQUIT $PPID'
autorestart=true
autostart=false
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0
